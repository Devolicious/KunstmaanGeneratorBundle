<?php

namespace Kunstmaan\GeneratorBundle\Command;

use Kunstmaan\GeneratorBundle\Generator\AdminTestsGenerator;
use Symfony\Component\Console\Input\InputOption;
use Sensio\Bundle\GeneratorBundle\Command\Validators;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * GenerateAdminTestsCommand
 */
class GenerateAdminTestsCommand extends KunstmaanGeneratorCommand
{

    protected function configure()
    {
        $this
            ->setDefinition(
                array(
                    new InputOption('namespace', '', InputOption::VALUE_REQUIRED, 'The namespace to generate the tests in'),
                )
            )
            ->setDescription('Generates the tests used to test the admin created by the default-site generator')
            ->setHelp(<<<EOT
The <info>kuma:generate:admin-test</info> command generates tests to test the admin generated by the default-site generator

<info>php app/console kuma:generate:admin-tests --namespace=Namespace/NamedBundle</info>

EOT
            )
            ->setName('kuma:generate:admin-tests');
    }

    protected function getWelcomeText()
    {
        return 'Admin Tests Generation';
    }

    protected function getOptionsRequired()
    {
        return array('namespace');
    }


    protected function doExecute()
    {
        $namespace = Validators::validateBundleNamespace($this->assistant->getOption('namespace'));
        $bundle = strtr($namespace, array('\\' => ''));

        $bundle = $this
            ->getApplication()
            ->getKernel()
            ->getBundle($bundle);

        /** @var $generator AdminTestsGenerator */
        $generator = $this->getGenerator($this->getApplication()->getKernel()->getBundle("KunstmaanGeneratorBundle"));
        $generator->setAssistant($this->assistant);
        $generator->generate($bundle);
    }

    protected function doInteract()
    {
        $this->assistant->writeSection('Welcome to the Kunstmaan default site generator');

        $this->askForNamespace(array(
            '',
            'This command helps you to generate tests to test the admin of the default site setup.',
            'You must specify the namespace of the bundle where you want to generate the tests.',
            'Use <comment>/</comment> instead of <comment>\\ </comment>for the namespace delimiter to avoid any problem.',
            '',
        ));
    }

    protected function createGenerator()
    {
        return new AdminTestsGenerator($this->getContainer()->get('filesystem'), '/admintests');
    }
}
